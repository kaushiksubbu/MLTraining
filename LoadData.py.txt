import numpy as np
import pandas as pd
from sklearn.model_selection import  train_test_split

def LoadData(filename, cols, delim=","):
    features = cols[:len(cols) - 1]
    y_class = [cols[len(cols) - 1]]

    df = pd.read_csv(filename, sep=delim)
    x_df = df[features]
    y_df = df[y_class]
    x_data = np.array(pd.DataFrame(x_df, columns = features))
    y_data = np.array(pd.DataFrame(y_df, columns = y_class))
    print (df.head())
    #find mean and median
    x_data = (x_data - np.mean(x_data, axis=0))/np.std(x_data, axis = 0)
#     for i in range(x_data.shape[1]):
#         mean = np.mean(x_data[:,i])
#         x_data[:,i] -= mean
#         stddev = np.std(x_data[:, i])
#         if (stddev != 0):
#             x_data[:,i] /= stddev

    x_data_train, x_data_test, y_data_train, y_data_test = \
        train_test_split(x_data, y_data, test_size=0.2, shuffle=False)
    return x_data_train, y_data_train, x_data_test, y_data_test
